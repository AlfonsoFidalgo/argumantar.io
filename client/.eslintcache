[{"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/index.js":"1","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/App.js":"2","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/QuestionsFeed.js":"3","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/FeedElement.js":"4","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Header.js":"5","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/Theme.js":"6","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Login.js":"7","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Signup.js":"8","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Post.js":"9","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Spinner.js":"10"},{"size":148,"mtime":1611783682688,"results":"11","hashOfConfig":"12"},{"size":1310,"mtime":1612206502272,"results":"13","hashOfConfig":"12"},{"size":2000,"mtime":1612303436571,"results":"14","hashOfConfig":"12"},{"size":2998,"mtime":1612209559893,"results":"15","hashOfConfig":"12"},{"size":2628,"mtime":1611870972858,"results":"16","hashOfConfig":"12"},{"size":447,"mtime":1611866856120,"results":"17","hashOfConfig":"12"},{"size":4167,"mtime":1612091558251,"results":"18","hashOfConfig":"12"},{"size":5316,"mtime":1612096236510,"results":"19","hashOfConfig":"12"},{"size":3497,"mtime":1612222204024,"results":"20","hashOfConfig":"12"},{"size":484,"mtime":1612304753207,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13w8gsb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/index.js",[],["45","46"],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/App.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/QuestionsFeed.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/FeedElement.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Header.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/Theme.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Login.js",["47"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, Typography, Button, Avatar, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    noDecoration: {\n        textDecoration: 'none'\n    }\n  }));\n\n\nconst Login = (props) => {\n    const [emailState, setEmailState] = useState('');\n    const [passwordState, setPasswordState] = useState('');\n\n    const cleanEmail = (eml) => {\n        const [firtPart, secondPart] = eml.split('@');\n        return firtPart.replaceAll('.','') + '@' + secondPart;\n    };\n\n    const loginHandler = (e) => {\n        e.preventDefault();\n        const data = {\n            email: cleanEmail(emailState),\n            password: passwordState\n        }\n        axios.post('http://localhost:3001/user/login', data)\n        .then(response => console.log(response.data))\n        .catch(err => console.log(err.response.data));\n    };\n\n    const emailHandler = (e) => {\n        setEmailState(e.target.value);\n    };\n\n    const passwordHandler = (e) => {\n        setPasswordState(e.target.value);\n    };\n\n    const classes = useStyles();\n\n    return (\n        (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Welcome Back!\n                </Typography>\n                <form className={classes.form} onSubmit={loginHandler}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"email\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={emailState}\n                        onChange={emailHandler}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={passwordState}\n                        onChange={passwordHandler}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                    Sign In\n                    </Button>\n                </form>\n                <Grid container>\n                    <Grid item xs>\n                        <Typography variant=\"body2\" color='primary'>\n                            Forgot password?\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body2\" component={Link} className={classes.noDecoration} color='primary' to='/signup'>\n                            Don't have an account? Sign Up\n                        </Typography>\n                    </Grid>\n                </Grid>\n                \n            </div>\n        </Container>\n        )\n    )\n};\n\nexport default Login;","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Signup.js",["48"],"import React, { useState, useEffect } from 'react';\nimport {Avatar, Button, TextField, Grid, makeStyles, Container, Typography} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  noDecoration: {\n    textDecoration: 'none'\n  }\n}));\n\nexport default function Signup(props) {  \n  const [emailState, setEmailState] = useState('');\n  const [passwordState, setPasswordState] = useState('');\n  const [usernameState, setUsernameState] = useState('');\n  const [displayNameState, setDisplayNameState] = useState('');\n  const [confirmedPasswordState, setConfirmedPasswordState] = useState('');\n  const classes = useStyles();\n  \n  const usernameHandler = (e) => setUsernameState(e.target.value);\n  const displaynameHandler = (e) => setDisplayNameState(e.target.value);\n  const emailHandler = (e) => setEmailState(e.target.value);\n  const passwordHandler = (e) => setPasswordState(e.target.value);\n  const confirmedPasswordHandler = (e) => setConfirmedPasswordState(e.target.value);\n\n  const signupHandler = (e) => {\n      e.preventDefault();\n      if (passwordState === confirmedPasswordState){\n          if (passwordState.length > 7){\n              const data = {\n                  email: emailState,\n                  username: usernameState,\n                  displayName: displayNameState,\n                  password: passwordState\n              };\n              axios.post('http://localhost:3001/user/signup', data)\n              .then(response => console.log(response.data))\n              .catch(err => console.log(err.response.data))\n          } else {\n              console.log('Please, provide a longer password (min. 8 characters)');\n          }\n      } else {\n          console.log('Password and confirmed password fields don\\'t match');\n      }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={signupHandler} >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                name=\"userName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"userName\"\n                label=\"Username\"\n                autoFocus\n                value={usernameState}\n                onChange={usernameHandler}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"displayName\"\n                label=\"Display Name\"\n                name=\"displayName\"\n                value={displayNameState}\n                onChange={displaynameHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                value={emailState}\n                onChange={emailHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={passwordState}\n                onChange={passwordHandler}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confirmedPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmedPassword\"\n                autoComplete=\"current-password\"\n                value={confirmedPasswordState}\n                onChange={confirmedPasswordHandler}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Typography variant=\"body2\" component={Link} className={classes.noDecoration} color='primary' to='/login'>\n                Already have an account? Sign in\n              </Typography>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Post.js",[],"/Users/alfonso.fidalgo/Documents/personal_projects/debates/client/src/components/Spinner.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]